{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../Icon.svelte",
    "../Label.svelte",
    "../Underline.svelte",
    "../Waypoint.svelte",
    "../Mapbox.svelte"
  ],
  "sourcesContent": [
    "<script>\n  let className = \"\";\n  export {className as class};\n  export let small = false;\n  export let xs = false;\n  export let reverse = false;\n  export let tip = false;\n  export let color = \"default\";\n</script>\n\n<style>\n  .reverse {\n    transform: rotate(180deg);\n  }\n\n  .tip {\n    transform: rotate(90deg);\n  }\n</style>\n\n<i\n  aria-hidden=\"true\"\n  class=\"material-icons icon text-xl {className} transition\"\n  class:reverse\n  class:tip\n  on:click\n  class:text-base={small}\n  class:text-xs={xs}\n  style={color ? `color: ${color}` : ''}>\n  <slot />\n</i>\n",
    "<script>\n  import utils, { ClassBuilder, filterProps } from \"../../utils/classes.js\";\n\n  let className = \"\";\n  export {className as class};\n  export let focused = false;\n  export let error = false;\n  export let outlined = false;\n  export let labelOnTop = false;\n  export let prepend = false;\n  export let color = \"primary\";\n  // for outlined button label\n  export let bgColor = \"white\";\n\n  let labelDefault = `pt-4 absolute top-0 label-transition block pb-2 px-4 pointer-events-none cursor-text`;\n\n  export let add = \"\";\n  export let remove = \"\";\n  export let replace = \"\";\n\n  export let labelClasses = labelDefault;\n\n  const {\n    bg,\n    border,\n    txt,\n    caret,\n  } = utils(color);\n\n  const l = new ClassBuilder(labelClasses, labelDefault);\n\n  let lClasses = i => i;\n\n  $: lClasses = l\n      .flush()\n      .add(txt(), focused && !error)\n      .add('text-error-500', focused && error)\n      .add('label-top text-xs', labelOnTop)\n      .remove('pt-4 pb-2 px-4 px-1 pt-0', labelOnTop && outlined)\n      .add(`ml-3 p-1 pt-0 mt-0 bg-${bgColor} dark:bg-dark-500`, labelOnTop && outlined)\n      .remove('px-4', prepend)\n      .add('pr-4 pl-10', prepend)\n      .add(add)\n      .remove(remove)\n      .replace(replace)\n      .get();\n\n  const props = filterProps([\n    'focused',\n    'error',\n    'outlined',\n    'labelOnTop',\n    'prepend',\n    'color'\n  ], $$props);\n</script>\n\n<style>\n.label-top {\n  line-height: 0.05;\n}\n.label-transition {\n  transition: font-size 0.05s, line-height 0.1s;\n}\n</style>\n\n<label class=\"{lClasses} {className}\" {...props}>\n  <slot />\n</label>",
    "<script>\n  import utils, { ClassBuilder, filterProps } from \"../../utils/classes.js\";\n\n  let className = \"\";\n  export {className as class};\n  export let noUnderline = false;\n  export let outlined = false;\n  export let focused = false;\n  export let error = false;\n  export let color = \"primary\";\n\n  let defaultClasses = `mx-auto w-0`;\n\n  export let add = \"\";\n  export let remove = \"\";\n  export let replace = \"\";\n\n  export let lineClasses = defaultClasses;\n\n  const {\n    bg,\n    border,\n    txt,\n    caret,\n  } = utils(color);\n\n  const l = new ClassBuilder(lineClasses, defaultClasses);\n\n  let Classes = i => i;\n\n  $: classes = l\n      .flush()\n      .add(txt(), focused && !error)\n      .add('bg-error-500', error)\n      .add('w-full', focused || error)\n      .add(bg(), focused)\n      .add(add)\n      .remove(remove)\n      .replace(replace)\n      .get();\n\n  const props = filterProps([\n    'focused',\n    'error',\n    'outlined',\n    'labelOnTop',\n    'prepend',\n    'bgcolor',\n    'color'\n  ], $$props);\n</script>\n\n<style>\n.line {\n  height: 1px;\n}\n</style>\n\n<div\n  class=\"line absolute bottom-0 left-0 w-full bg-gray-600 {className}\"\n  class:hidden={noUnderline || outlined}>\n  <div\n    class=\"{classes}\"\n    style=\"height: 2px; transition: width .2s ease\" />\n</div>",
    "<script>\n  import { createEventDispatcher, onDestroy } from 'svelte';\n\n  const dispatch = createEventDispatcher();\n\n  export let offset = 0;\n  export let throttle = 250;\n  export let c = '';\n  export let style = '';\n  export let once = true;\n  export let threshold = 1.0;\n  export let disabled = false;\n\n  let className = \"\";\n  export { className as class };\n\n  let visible = disabled;\n  let wasVisible = false;\n  let intersecting = false;\n  let removeHandlers = () => {};\n\n  function throttleFn(fn, time) {\n    let last, deferTimer;\n\n    return () => {\n      const now = +new Date;\n\n      if (last && now < last + time) {\n        // hold on to it\n        clearTimeout(deferTimer);\n        deferTimer = setTimeout(function () {\n          last = now;\n          fn();\n        }, time);\n      } else {\n        last = now;\n        fn();\n      }\n    };\n  }\n\n  function callEvents(wasVisible, observer, node) {\n    if (visible && !wasVisible) {\n      dispatch('enter');\n      return;\n    }\n\n    if (wasVisible && !intersecting) {\n      dispatch('leave');\n    }\n\n    if (once && wasVisible && !intersecting) {\n      removeHandlers();\n    }\n  }\n\n  function waypoint(node) {\n    if (!window || disabled) return;\n\n    if (window.IntersectionObserver && window.IntersectionObserverEntry) {\n      const observer = new IntersectionObserver(([ { isIntersecting } ]) => {\n        wasVisible = visible;\n\n        intersecting = isIntersecting;\n\n        if (wasVisible && once && !isIntersecting) {\n          callEvents(wasVisible, observer, node);\n          return;\n        }\n\n        visible = isIntersecting;\n\n        callEvents(wasVisible, observer, node);\n      }, {\n        rootMargin: offset + 'px',\n        threshold,\n      });\n\n      observer.observe(node);\n\n      removeHandlers = () => observer.unobserve(node);\n\n      return removeHandlers;\n    }\n\n    function checkIsVisible() {\n      // Kudos https://github.com/twobin/react-lazyload/blob/master/src/index.jsx#L93\n      if (!(node.offsetWidth || node.offsetHeight || node.getClientRects().length)) return;\n\n      let top;\n      let height;\n\n      try {\n        ({ top, height } = node.getBoundingClientRect());\n      } catch (e) {\n        ({ top, height } = defaultBoundingClientRect);\n      }\n\n      const windowInnerHeight = window.innerHeight\n        || document.documentElement.clientHeight;\n\n      wasVisible = visible;\n      intersecting = (top - offset <= windowInnerHeight) &&\n        (top + height + offset >= 0);\n\n      if (wasVisible && once && !isIntersecting) {\n        callEvents(wasVisible, observer, node);\n        return;\n      }\n\n      visible = intersecting;\n\n      callEvents(wasVisible);\n    }\n\n    checkIsVisible();\n\n    const throttled = throttleFn(checkIsVisible, throttle);\n\n    window.addEventListener('scroll', throttled);\n    window.addEventListener('resize', throttled);\n\n    removeHandlers = () => {\n      window.removeEventListener('scroll', throttled);\n      window.removeEventListener('resize', throttled);\n    }\n\n    return removeHandlers;\n  }\n</script>\n\n<style>\n.wrapper {\n  display: inline-block;\n}\n</style>\n\n<div class=\"wrapper {className} {c}\" {style} use:waypoint>\n  {#if visible}\n    <slot />\n  {/if}\n</div>\n",
    "<script>\n\timport { onMount } from 'svelte';\n\timport mapboxgl from 'mapbox-gl';\n\n\texport let lat;\n\texport let lon;\n\texport let zoom;\n\texport let mapElements;\n\n\tlet container;\n\tlet map;\n\tlet markers = [];\n\n\tonMount(async () => {\n\n        // Default Mapbox API key from the docs\n        mapboxgl.accessToken = 'pk.eyJ1IjoidmxhZG9za2kiLCJhIjoiY2szNzFrbnBqMDc0aDNjbnMxZ3R1cDlobCJ9.hrd1syWrQqTE-4Ucn0UW_w';\n\n\t\tmap = new mapboxgl.Map({\n\t\t\tcontainer,\n\t\t\tstyle: 'mapbox://styles/mapbox/streets-v9',\n\t\t\tcenter: [lon, lat],\n\t\t\tzoom,\n\t\t\tattributionControl: false, // Deletes the attribution control\n\t\t\tlogoPosition: 'top-left' // Moves the logo position up on the top left corner\n\t\t});\n\n\t\tmap.addControl(new mapboxgl.NavigationControl({\n\t\t\tshowCompass: true,\n\t\t\tshowZoom: false\n\t\t}));\n\n\t\tconst geolocate = new mapboxgl.GeolocateControl({\n\t\t\tpositionOptions: {\n\t\t\t\tenableHighAccuracy: true,\n\t\t\t},\n\t\t\ttrackUserLocation: true,\n\t\t\tshowUserLocation: true\n\t\t});\n\n\t\t// Moves the attribution up in the left corner\n\t\tmap.on('load', function() {\n\t\t\tmap.addControl(new mapboxgl.AttributionControl(), 'top-right');\n\t\t\tgeolocate.trigger();\n\n\t\t\tif (mapElements !== undefined) {\n\n\t\t\t\tmapElements.forEach(element => {\n\t\t\t\t\tlet icon = document.createElement('div');\n\t\t\t\t\ticon.className = 'marker';\n\t\t\t\t\ticon.id = element.id;\n\t\t\t\t\ticon.style.width = '3rem';\n\t\t\t\t\ticon.style.height = '3rem';\n\t\t\t\t\ticon.style.backgroundSize = 'contain';\n\n\t\t\t\t\t// TODO: refactor this\n\t\t\t\t\tif (element.type == \"CA\") {\n\t\t\t\t\t\tif (element.size == \"M\") {\n\t\t\t\t\t\t\ticon.style.backgroundImage = 'url(img/candy_m.png)';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (element.size == \"L\") {\n\t\t\t\t\t\t\ticon.style.backgroundImage = 'url(img/candy_l.png)';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (element.size == \"S\") {\n\t\t\t\t\t\t\ticon.style.backgroundImage = 'url(img/candy_s.png)';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (element.type == \"MO\") {\n\t\t\t\t\t\tif (element.size == \"M\") {\n\t\t\t\t\t\t\ticon.style.backgroundImage = 'url(img/monster_m.png)';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (element.size == \"L\") {\n\t\t\t\t\t\t\ticon.style.backgroundImage = 'url(img/monster_l.png)';\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (element.size == \"S\") {\n\t\t\t\t\t\t\ticon.style.backgroundImage = 'url(img/monster_s.png)';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet newMarker = new mapboxgl.Marker(icon)\n\t\t\t\t\t\t.setLngLat([parseFloat(element.lon), parseFloat(element.lat)])\n\t\t\t\t\t\t.addTo(map);\n\n\t\t\t\t\tmarkers = [newMarker, ...markers];\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t// Could be useful for memory leaks\n\t\treturn () => {\n\t\t\tmap.remove();\n\t\t};\n\t});\n\n</script>\n\n<style>\n\t#mapbox {\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tbottom: 0;\n\t\twidth: 100%;\n\t}\n\n\t.marker {\n\t\tdisplay: block;\n\t\tborder: none;\n\t\tcursor: pointer;\n\t\tpadding: 0;\n\t}\n</style>\n\n<svelte:head>\n\t<link rel=\"stylesheet\" href=\"mapbox-gl.css\">\n</svelte:head>\n\n<div id=\"mapbox\" bind:this={container}>\n\t{#if map}\n\t\t<slot></slot>\n\t{/if}\n</div>"
  ],
  "names": [],
  "mappings": "AAWE,QAAQ,cAAC,CAAC,AACR,SAAS,CAAE,OAAO,MAAM,CAAC,AAC3B,CAAC,AAED,IAAI,cAAC,CAAC,AACJ,SAAS,CAAE,OAAO,KAAK,CAAC,AAC1B,CAAC;ACyCH,UAAU,cAAC,CAAC,AACV,WAAW,CAAE,IAAI,AACnB,CAAC,AACD,iBAAiB,cAAC,CAAC,AACjB,UAAU,CAAE,SAAS,CAAC,KAAK,CAAC,CAAC,WAAW,CAAC,IAAI,AAC/C,CAAC;ACVD,KAAK,cAAC,CAAC,AACL,MAAM,CAAE,GAAG,AACb,CAAC;AC6ED,QAAQ,eAAC,CAAC,AACR,OAAO,CAAE,YAAY,AACvB,CAAC;ACrCA,OAAO,cAAC,CAAC,AACR,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,MAAM,CAAE,CAAC,CACT,KAAK,CAAE,IAAI,AACZ,CAAC"
}